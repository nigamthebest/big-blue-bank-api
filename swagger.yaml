swagger: "2.0"
info:
  description: "This is a sample API for Banks Accounts and User authentication. "
  version: "1.0.0"
  title: "Big Blue Bank Account API "
  contact:
    email: "ankit.nigam@outlook.com"
host: "big-blue-bank.com"
basePath: "/v1"
tags:
- name: "user"
  description: "User Registartion and Authentication"
- name: "accounts"
  description: "Opening Account and Listing Accounts"
- name: "trnasactions"
  description: "Create and List Transactions"
schemes:
- "http"
paths:
  /account:
    get:
      tags:
      - "account"
      summary: "Return list of accounts for the authenticated user"
      description: "Returns all the accounts belonging to userId"
      operationId: "getAccountList"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AccountListResponse"
        "404":
          description: "Account not found"
      security:
      - bearerAuth: []
    post:
      tags:
      - "account"
      summary: "Create Account "
      description: ""
      operationId: "createAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Create account request "
        required: true
        schema:
          $ref: "#/definitions/AccountCreationRequest"
      
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AccountCreationResponse"
        "405":
          description: "Invalid input"
      security:
      - bearerAuth: []
  /account/{id}:
    get:
      tags:
      - "account"
      summary: " Get account by id"
      description: "Returns a single account by id"
      operationId: "getAccountById"
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AccountCreationResponse"
        "404":
          description: "Account not found"
      security:
      - bearerAuth: []
  /user/register:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/UserRegistartionReq"
      responses:
        "201":
          description: "Registration successful"
          schema:
           $ref: "#/definitions/AuthResponse"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
       - in: "body"
         name: "body"
         description: "Created user object"
         required: true
         schema:
          $ref: "#/definitions/UserLoginReq"
      responses:
        "200":
          description: "Login successful"
          schema:
           $ref: "#/definitions/AuthResponse"
        "401":
          description: "Invalid username/password supplied"
          schema:
           $ref: "#/definitions/ErrorResponse"
      security:
        api_key:
securityDefinitions:
  bearerAuth:
    type: basic
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  AccountCreationRequest:
    type: "object"
    properties:
      balance:
        type: "integer"
        format: "int32"
      currency:
        type: "string"
        description: "Currency"
        enum:
        - "EUR"
        - "SEK"
        - "DKK"
        - "USD"
      country:
        type: "string"
        description: "Country code"
        enum:
        - "FI"
        - "SE"
        - "US"
      accountType:
        type: "string"
        description: "Account Type"
        enum:
        - "savings"
        - "current"
        - "minor"
      kycStatus:
        type: "boolean"
        default: false
  AccountCreationResponse:
      allOf:     # Combines the BasicErrorModel and the inline model
        - $ref: '#/definitions/AccountCreationRequest'
        - type: object
          required:
            - id
            - userId
          properties:
            id:
              type: string
            userId:
              type: string
  AccountListResponse:
    type: "object"
    properties:
      accountList:
       type: "array"
       items:
        type: "object"
        $ref: '#/definitions/AccountCreationResponse'
  
  Transaction:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  UserRegistartionReq:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  UserLoginReq:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  AuthResponse:
    type: "object"
    properties:
      accessToken:
        type: "string"
  ErrorResponse:
    type: "object"
    properties:
      message:
        type: "string"